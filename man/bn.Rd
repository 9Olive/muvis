% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bn.R
\name{bn}
\alias{bn}
\title{construct and visualize a Bayesian (directed) Network}
\usage{
bn(data, C.alg = NULL, S.alg = c("mmhc"), blacklist = NULL,
  whitelist = NULL, R = 10, m = 0, str.thresh = 0, dir.thresh = 0,
  community = T, plot = F)
}
\arguments{
\item{data}{a normalized dataframe or matrix with no missing data of continuous and (or) categorical measurements.}

\item{C.alg}{a vector of Constraint-based and Local Discovery algorithms from \{"gs", "mmpc", "si.hiton.pc"\}. Default is NULL.}

\item{S.alg}{a vector of Score-based and Hybrid algorithms from \{"pc.stable", "hc", "tabu", "mmhc", "aracne"\}. The default is "mmhc".}

\item{blacklist}{a two-column dataframe which includes edges to be excluded from the network.}

\item{whitelist}{a two-column dataframe which includes edges to be included from the network.}

\item{R}{an integer to demonstrate the number of runs of bootstrap sampling. The default value is 10.}

\item{m}{an integer to demonstrate the number of rows to be sampled from dataset in each bootstrap sampling. The default value is the number of rows in data.}

\item{str.thresh}{a double between 0 and 1 indicating the threshold value for an association to be considered in the network. The default value is 0.}

\item{dir.thresh}{a double between 0 and 1 indicating the threshold value for a direction of an edge to be considered in the network. The default value is 0.}

\item{community}{a logical value. If TRUE (the default) the network will be colored into communities of edge-dense subgraphs.}

\item{plot}{(default = FALSE)}
}
\value{
returns a list including a dataframe including the edges of the network with their strength and strength of directions and a highcharter plot.
}
\description{
Fits a Bayesian network (a directed acyclic graph) to variables and performs bootstrapping.
The function also visualizes the structure of the Bayesian network and decompose the graph into the underlying communities.
}
\details{
The function is a wrapper for bnlearn package implementing several algorithms including Constraint-based algorithms (i.e., Max-Min Parents and Children, Semi-Interleaved HITON-PC, and Grow-Shrink), Score-based algorithms (i.e., Hill-Climbing and Tabu Search), and Hybrid algorithms (i.e., Max-Min Hill-Climbing), and Local Discovery algorithms (i.e, Max-Min Parents and Children and ARACNE). If one uses a more than one algorithm, the function combines all of the algorithms and returns a graph based on the combination. The graph is constructed based on the strength of associations calculated by bootstrapping.
}
\references{
Nagarajan R, Scutari M, Lebre S (2013). "Bayesian Networks in R with Applications in Systems Biology". Springer.

Scutari M (2010). "Learning Bayesian Networks with the bnlearn R Package". Journal of Statistical Software, 35(3), 1-22. URL http://www.jstatsoft.org/v35/i03/.

Scutari M (20107). "Bayesian Network Constraint-Based Structure Learning Algorithms: Parallel and Optimized Implementations in the bnlearn R Package". Journal of Statistical Software, 77(2), 1-20. URL http://www.jstatsoft.org/v77/i02/.

Koller D, Friedman N (2009). Probabilistic Graphical Models: Principles and Techniques. MIT Press.

Korb K, Nicholson AE (2010). Bayesian Artificial Intelligence. Chapman & Hall/CRC, 2nd edition.

Pearl J (1988). Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. Morgan Kaufmann.
}
\author{
Elyas Heidari
}
