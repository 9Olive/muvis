% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_repres.R
\name{find_repres}
\alias{find_repres}
\title{Find representative variables.}
\usage{
find_repres(data, ratio = 0.1, weighted = FALSE, levels = NULL)
}
\arguments{
\item{data}{A normalized dataframe or matrix with no missing data of continuous and (or) categorical measurements.}

\item{ratio}{A number between (0, 1) indicating the ratio of data variables to be chosen as representative. Defaults to 0.1.}

\item{weighted}{A logical indicating if the number of nodes selected from each community is weighted. Defaults to FALSE. See details for more information.}

\item{levels}{An integer value indicating the maximum number of levels of a categorical variable. To be used to distinguish the categorical variable.
Defaults to NULL because it is supposed that \code{data} has been preprocessed using \code{\link[muvis]{data_preproc}} and the categorical variables are specified.
If it is set, first will run \code{\link[muvis]{data_preproc}} to specify categorical and continuous variables.}
}
\value{
a vector containing names of representative variables.
}
\description{
Uses \code{\link[muvis]{min_forest}} community detection and selects a number of variables from each community as representative.
}
\details{
The function uses \code{\link[muvis]{min_forest}} to detect communities of variables. It sorts each community nodes based on their degree and selects an equal number of each based on \code{ratio} parameter.
If \code{weighted} is TRUE it will select different number of nodes from each community based on their sizes.
}
\examples{
data("NHANES")
## Using raw data
repres_vars <- find_repres(data = NHANES[1:1000, ], ratio = .2, levels = 10)

## Using preprocessed data
data <- data_preproc(NHANES, levels = 15)
## With \\code{weighted = TRUE}
repres_vars <- find_repres(data = data[1:1000, ], weighted = TRUE)

}
\author{
Vahid Balazadeh, Elyas Heidari
}
